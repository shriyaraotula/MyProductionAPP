version: '3.9'

services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Plmoknijb1234
      POSTGRES_DB: myappdb
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d myappdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  fastapi:
    build: .
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:Plmoknijb1234@postgres:5432/myappdb
      - ENABLE_KAFKA=0
      - ENVIRONMENT=production
      - SECRET_KEY=production_secret_key
      - DB_HOST=postgres
      - DB_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Plmoknijb1234
      - POSTGRES_DB=myappdb
    command: sh -c "sleep 10 && uvicorn MyProductionAPP.main:app --host 0.0.0.0 --port 8000"

  proxy:
    build: ./nginx
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - fastapi

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
